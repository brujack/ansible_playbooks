---

- debug: msg="{{ kvm_vm_name | regex_replace('^klipbox-(.*)$', '52:54:00:00:00:\\1' ) }}"
  when: "'klipbox' in kvm_vm_name"
  register: 'mac_address_result'

- set_fact:
    mac_address: >-
      {{
        kvm_vm_mac
          if ('klipbox' not in kvm_vm_name and kvm_vm_mac is defined)
          else
        mac_address_result.msg
          if (mac_address_result is defined and 'klipbox' in kvm_vm_name)
          else
        None
      }}

- debug: var=mac_address

- name: virt-install | create klipbox vm
  command: virt-install
    --import
    --name "{{ libvirt_result_domain_name }}"
    --ram {{ libvirt_vm_memory }}
    --vcpus {{ libvirt_vm_vcpu }}
    --disk {{ libvirt_images_path }}/{{ libvirt_result_domain_name }}.qcow2,format=qcow2,bus=virtio
    --disk {{ libvirt_images_path }}/{{ libvirt_result_domain_name }}.configdrive.iso,device=cdrom
    --network bridge={{kvm_network_bridge_name}},model=virtio
    --mac "{{ mac_address }}"
    --os-type=linux
    --os-variant=rhel6
    --noautoconsole
  when: "mac_address is defined"


- name: virt-install | create vm
  command: virt-install
    --import
    --name "{{ libvirt_result_domain_name }}"
    --ram {{ libvirt_vm_memory }}
    --vcpus {{ libvirt_vm_vcpu }}
    --disk {{ libvirt_images_path }}/{{ libvirt_result_domain_name }}.qcow2,format=qcow2,bus=virtio
    --disk {{ libvirt_images_path }}/{{ libvirt_result_domain_name }}.configdrive.iso,device=cdrom
    --network bridge={{kvm_network_bridge_name}},model=virtio
    --os-type=linux
    --os-variant=rhel6
    --noautoconsole
  when: "mac_address is not defined"
